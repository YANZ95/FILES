
1.wrapper 
(header-content-footer)

2. header
(title-closeBtn-guideText)

3. content
(questionBtns-answerArea)

4.footer 

총 4가지(3가지)로 정리함 
---------------------------------
ChatRoom: 메인 컴포넌트, 위의 하위 컴포넌트들을 조합하여 전체 구조를 관리.
이제 각 하위


ChatRoomHeader: 헤더 영역 (뒤로 가기 버튼, 제목, 닫기 버튼).

ChatOptions: 추가 질문 옵션 목록과 선택한 답변 표시 영역.

FaqQuestions: FAQ 질문 목록과 선택한 답변 표시 영역.

ChatRoomFooter: 풋터 영역 (상담 연결 시간 또는 기타 안내).

-----------------------------------------------------------------------
App Component   |: 최상위 컴포넌트로, 전체 애플리케이션을 감싸고 전역 상태 관리와 라우팅 등을 처리합니다.

ChatRoom Component: 채팅방을 관리하는 부모 컴포넌트로, 사용자가 채팅을 시작하고 종료할 수 있는 UI 요소를 포함합니다.
 이 컴포넌트는 LiveChatting과 FAQComponent 등의 자식 컴포넌트를 포함합니다.

LiveChatting Component: 채팅이 진행되는 핵심 컴포넌트로, 사용자와 상담사의 메시지를 주고받는 화면을 렌더링합니다. 
여기서는 실제로 채팅 내용을 보여주고 메시지를 입력할 수 있는 기능을 제공합니다.

ChatInput Component: 사용자 메시지 입력 필드와 전송 버튼을 포함한 컴포넌트입니다. 사용자가 메시지를 입력하고 전송할 수 있도록 도와줍니다.

MessageList Component: 채팅방에서 주고받은 메시지를 리스트 형태로 보여주는 컴포넌트입니다. 이 컴포넌트는 Redux 상태나 Firebase에서 가져온 데이터를 표시합니다.

Redux Store: 전체 상태 관리를 담당하는 중앙 저장소입니다. chatRoomSlice와 같은 슬라이스 파일이 포함되며, 각 컴포넌트가 필요로 하는 상태나 액션을 관리합니다.
구조도 설명



Firebase API: Firebase와의 통신을 담당하는 모듈입니다. 메시지 저장, 가져오기, 실시간 업데이트 리스너 등의 기능이 이곳에 정의됩니다.